
*KeyMap.txt*  Vim lib complex keybind definitions
                                                               *accessibility*



==============================================================================
CONTENTS                                              *accessibility-contents*


  1. Functions                                        |accessibility-functions|
  2. Commands                                         |accessibility-commands|
  3. Global variables                                 |accessibility-globals|


==============================================================================
FUNCTIONS                                             *accessibility-functions*

KeyMap#PrintCurrentLayer()   *KeyMap#PrintCurrentLayer()*
    Print current keybind layer.

KeyMap#Map(name, keybinds, action, modes_and_post_actions)   *KeyMap#Map()*
    Assign keybindings with these arguments
    - name   required for info e.g. 'Save the file', 
    - keybind or keybind list e.g. '<C-s>', ['<C-s>','<C-S'>]
    - action                   e.g. ':w<CR>',
    - list of mode (1st char)
      and post action         e.g. 'i','Ia','n','v' 
    e.g. 'ia' -> for insert mode do the keybinding a reenter in insert mode with 'a' 
    e.g. 'i<Left>' -> for insert mode do the keybinding and move cursor to left

Keymap#Source([file])   *Keymap#Source()*
    Source [file] according to the |KeyMap-format|.



==============================================================================
COMMANDS                                              *accessibility-commands*

 :Layer [layer_name]
    Toggle [layer_name].
 :Layers
    List possible values for |:Layer|.
 :KeyMap [file]
    Source [file] according to the |KeyMap-format|. Use |Keymap#Source()|.



==============================================================================
GLOBAL VARIABLES                                      *accessibility-globals*


g:km_file_include_sid   *g:km_file_include_sid*
    To set before using |:Keymap| in order to use script local variable
    and function.

g:km_file_substs   *g:km_file_substs*
    To set before using |:Keymap| in order to use to substitute repetitive
    sequence.
    Require |keymap-inception|. ```
         if 0 | endif
         let g:km_file_substs=[
         \ ['pum?', '<expr>pumvisible()?', '']
         \]

         KeyMap <sfile>
         finish
         <A-Up>    "Compl.from file  " pum?"<UP>":"<C-x><C-i>"   %  i
         finish
    ```

g:km_layer_status   *g:km_layer_status*
    Layer status string.
    If you customize your statusline your could need to add : ```
      let &statusline="%#ModeMsg#%{g:km_layer_status}%#{}#".&statusline
    ```

g:km_mode_hash   *g:km_mode_hash*
    All known modes, shall not be set before the plugin is loaded
    to modify or add a mode. Example : ```
       " 'I' for one-shot normal mode from insert mode
       let g:km_mode_hash['I']=['i','<C-o>','']
    ```
    A value of this dict is a list : (mode, before_action, after_action)
    Note: after_action is followed by the post-action (see |KeyMap-format|)

    Default values (with $A as action, and $P as post-action):
        n -> in normal mode, do $A$P
        : ->               , do :$A<Cr>$P
        i- > in insert mode, do $A$P
        N ->               , do <Esc>$A$P
        I ->               , do <C-o>$A$P
        v -> in select/visual mode, do $A$P
        V ->                     ", do <Esc>$A$P
        s -> in select mode, do $A$P
        S ->               , do <Esc>$A$P
        x -> in visual mode, do $A$P
        X ->               , do <Esc>$A$P
        o -> in operator-pending mode, do $A$P
        O ->                         , do <Esc>$A$P
        l -> in insert/command-line/lang-arg mode, do $A$P
        L ->                                     , do <Esc>$A$P
        c -> in command-line mode, do $A$P
        C ->                     , do <Esc>$A$P
        a ->                     , expand to $A and do $P
        A ->                     , expand to $A if keybind is the first element
                                   (Equivalent of 'alias keybind $A'
                                    with dynamic expansion)

g:km_status_substitions   *g:km_status_substitions*
    Representation of the mode in the status bar






vim:tw=78:ts=8:ft=help:norl:

